{"data":{"page":{"html":"<p>Override default list item component in a dropdown</p>\n<h3>Usage</h3>\n<pre><code>itemRenderer={\n  (item, itemIndex, innerProps, innerState, innerMethods) => &#x3C;component/>\n}\n</code></pre>","frontmatter":{"date":"November 07, 2017","path":"/prop/item-renderer","title":"itemRenderer","demo":"https://codesandbox.io/s/6y835v1m3r","innerProps":true,"innerState":true,"innerMethods":true}},"methodsPage":{"html":"<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Arguments</th>\n<th>Return</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>removeItem(event, item, false)</td>\n<td><strong>event</strong>: eventEmitter | null <br/><strong>item</strong>: object<br/> <strong>closeModal</strong>: boolean</td>\n<td>undefined</td>\n<td><code>event</code> used to stop propagation</td>\n</tr>\n<tr>\n<td>dropDown('toggle')</td>\n<td><strong>string</strong>: open|close|toggle</td>\n<td>undefined</td>\n<td>one of <em>open</em>, <em>close</em> or <em>toggle</em></td>\n</tr>\n<tr>\n<td>addItem(item)</td>\n<td><strong>item</strong>: object</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>setSearch(event)</td>\n<td><strong>event</strong>: eventEmitter</td>\n<td>undefined</td>\n<td>expects to get <code>event</code> with <code>{ target: { value } }</code></td>\n</tr>\n<tr>\n<td>getInputSize()</td>\n<td>-</td>\n<td>number</td>\n<td>input character count</td>\n</tr>\n<tr>\n<td>toggleSelectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>clearAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>selectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>isSelected(item)</td>\n<td><strong>item</strong>: object</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>searchResults()</td>\n<td>-</td>\n<td>array</td>\n<td>returns array of items matching <code>/item.label/i</code> regex, if <code>searchBy</code> prop is used - matches against it's value</td>\n</tr>\n<tr>\n<td>selectRef()</td>\n<td>-</td>\n<td>DOM node</td>\n<td>returns DOM element of &#x3C;Select/></td>\n</tr>\n<tr>\n<td>getSelectBounds()</td>\n<td>-</td>\n<td>object</td>\n<td>returns <code>getBoundingClientRect()</code> of &#x3C;Select/></td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/methods","title":"methods"}},"propsPage":{"html":"<table>\n<thead>\n<tr>\n<th>Props</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Component props</strong></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>values</td>\n<td>array</td>\n<td>[]</td>\n<td>Selected values</td>\n</tr>\n<tr>\n<td>options</td>\n<td>array</td>\n<td>[]</td>\n<td>Available options</td>\n</tr>\n<tr>\n<td>keepOpen</td>\n<td>bool</td>\n<td>false</td>\n<td>If true, dropdown will always stay open (good for debugging)</td>\n</tr>\n<tr>\n<td>dropdownGap</td>\n<td>number</td>\n<td>5</td>\n<td>Gap between select element and dropdown</td>\n</tr>\n<tr>\n<td>multi</td>\n<td>bool</td>\n<td>false</td>\n<td>If true - will act as multi-select, if false - only one option will be selected at the time</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>string</td>\n<td>\"Select...\"</td>\n<td>Placeholder shown where there are no selected values</td>\n</tr>\n<tr>\n<td>addPlaceholder</td>\n<td>string</td>\n<td>\"+\"</td>\n<td>Secondary placeholder on search field if any value selected</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>bool</td>\n<td>false</td>\n<td>Disable select and all interactions</td>\n</tr>\n<tr>\n<td>style</td>\n<td>object</td>\n<td>{}</td>\n<td>style object to pass to sselect</td>\n</tr>\n<tr>\n<td>className</td>\n<td>string</td>\n<td></td>\n<td>CSS class attribute to pass to sselect</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>bool</td>\n<td>false</td>\n<td>loading indicator</td>\n</tr>\n<tr>\n<td>clearable</td>\n<td>bool</td>\n<td>true</td>\n<td>Clear all indicator</td>\n</tr>\n<tr>\n<td>separator</td>\n<td>bool</td>\n<td>true</td>\n<td>Separator line between close all and dropdown handle</td>\n</tr>\n<tr>\n<td>dropdownHandle</td>\n<td>bool</td>\n<td>true</td>\n<td>dropdown handle to open/close dropdown</td>\n</tr>\n<tr>\n<td>searchBy</td>\n<td>string</td>\n<td>label</td>\n<td>search by object property in values</td>\n</tr>\n<tr>\n<td>closeOnScroll</td>\n<td>bool</td>\n<td>false</td>\n<td>If true, scrolling the page will close the dropdown</td>\n</tr>\n<tr>\n<td><strong>Callback props</strong></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>func</td>\n<td></td>\n<td>On values change callback, returns array of values objects</td>\n</tr>\n<tr>\n<td>onDropdownClose</td>\n<td>func</td>\n<td></td>\n<td>fires upon dropdown close</td>\n</tr>\n<tr>\n<td>onDropdownOpen</td>\n<td>func</td>\n<td></td>\n<td>fires upon dropdown open</td>\n</tr>\n<tr>\n<td>onClearAll</td>\n<td>func</td>\n<td></td>\n<td>fires upon clearing all values (via custom renderers)</td>\n</tr>\n<tr>\n<td>onSelectAll</td>\n<td>func</td>\n<td></td>\n<td>fires upon selecting all values (via custom renderers)</td>\n</tr>\n<tr>\n<td><a href=\"/prop/content-renderer\">contentRenderer</a></td>\n<td>func</td>\n<td></td>\n<td>Overrides internal content component (the contents of the select component)</td>\n</tr>\n<tr>\n<td><a href=\"/prop/item-renderer\">itemRenderer</a></td>\n<td>func</td>\n<td></td>\n<td>Overrides internal item in a dropdown</td>\n</tr>\n<tr>\n<td><a href=\"/prop/no-data-renderer\">noDataRenderer</a></td>\n<td>func</td>\n<td></td>\n<td>Overrides internal \"no data\" (shown where search has no results)</td>\n</tr>\n<tr>\n<td><a href=\"/prop/option-renderer\">optionRenderer</a></td>\n<td>func</td>\n<td></td>\n<td>Overrides internal option (the pillow with an \"x\") on the select content</td>\n</tr>\n<tr>\n<td><a href=\"/prop/input-renderer\">inputRenderer</a></td>\n<td>func</td>\n<td></td>\n<td>Overrides internal input text</td>\n</tr>\n<tr>\n<td>loadingRenderer</td>\n<td>func</td>\n<td></td>\n<td>Overrides internal loading</td>\n</tr>\n<tr>\n<td>clearRenderer</td>\n<td>func</td>\n<td></td>\n<td>Overrides internal clear button</td>\n</tr>\n<tr>\n<td>separatorRenderer</td>\n<td>func</td>\n<td></td>\n<td>Overrides internal separator</td>\n</tr>\n<tr>\n<td>dropdownRenderer</td>\n<td>func</td>\n<td></td>\n<td>Overrides internal dropdown component</td>\n</tr>\n<tr>\n<td>dropdownHandleRenderer</td>\n<td>func</td>\n<td></td>\n<td>Overrides internal dropdown handle</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/props","title":"Props"}},"statePage":{"html":"<p>Access to current state of &#x3C;Select/> component</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Return</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dropdown</td>\n<td>boolean</td>\n<td>check if dropdown is open</td>\n</tr>\n<tr>\n<td>values</td>\n<td>array</td>\n<td>selected value(s)</td>\n</tr>\n<tr>\n<td>search</td>\n<td>string</td>\n<td>current search string</td>\n</tr>\n<tr>\n<td>selectBounds</td>\n<td>object</td>\n<td>current <code>getBoundingClientRect()</code> of &#x3C;Select/></td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/state","title":"State"}}},"pageContext":{"all":{"path":"/prop/item-renderer","demo":"https://codesandbox.io/s/6y835v1m3r","innerState":true,"innerProps":true,"innerMethods":true}}}