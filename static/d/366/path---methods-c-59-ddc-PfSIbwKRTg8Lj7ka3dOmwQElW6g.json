{"data":{"page":{"html":"<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Arguments</th>\n<th>Return</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>removeItem(event, item, false)</td>\n<td><strong>event</strong>: eventEmitter | null <br/><strong>item</strong>: object<br/> <strong>closeModal</strong>: boolean</td>\n<td>undefined</td>\n<td><code>event</code> used to stop propagation</td>\n</tr>\n<tr>\n<td>dropDown('toggle')</td>\n<td><strong>string</strong>: open|close|toggle</td>\n<td>undefined</td>\n<td>one of <em>open</em>, <em>close</em> or <em>toggle</em></td>\n</tr>\n<tr>\n<td>addItem(item)</td>\n<td><strong>item</strong>: object</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>setSearch(event)</td>\n<td><strong>event</strong>: eventEmitter</td>\n<td>undefined</td>\n<td>expects to get <code>event</code> with <code>{ target: { value } }</code></td>\n</tr>\n<tr>\n<td>getInputSize()</td>\n<td>-</td>\n<td>number</td>\n<td>input character count</td>\n</tr>\n<tr>\n<td>toggleSelectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>clearAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>selectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td>will select all values except disabled</td>\n</tr>\n<tr>\n<td>isSelected(item)</td>\n<td><strong>item</strong>: object</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>searchResults()</td>\n<td>-</td>\n<td>array</td>\n<td>returns array of items matching <code>/item.label/i</code> regex, if <code>searchBy</code> prop is used - matches against it's value</td>\n</tr>\n<tr>\n<td>selectRef()</td>\n<td>-</td>\n<td>DOM node</td>\n<td>returns DOM element of &#x3C;Select/></td>\n</tr>\n<tr>\n<td>getSelectBounds()</td>\n<td>-</td>\n<td>object</td>\n<td>returns <code>getBoundingClientRect()</code> of &#x3C;Select/></td>\n</tr>\n<tr>\n<td>areAllSelected()</td>\n<td>-</td>\n<td>boolean</td>\n<td>returns true/false if all values (except disabled) selected</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/methods","title":"methods","demo":null,"innerProps":null,"innerState":null,"innerMethods":null}},"methodsPage":{"html":"<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Arguments</th>\n<th>Return</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>removeItem(event, item, false)</td>\n<td><strong>event</strong>: eventEmitter | null <br/><strong>item</strong>: object<br/> <strong>closeModal</strong>: boolean</td>\n<td>undefined</td>\n<td><code>event</code> used to stop propagation</td>\n</tr>\n<tr>\n<td>dropDown('toggle')</td>\n<td><strong>string</strong>: open|close|toggle</td>\n<td>undefined</td>\n<td>one of <em>open</em>, <em>close</em> or <em>toggle</em></td>\n</tr>\n<tr>\n<td>addItem(item)</td>\n<td><strong>item</strong>: object</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>setSearch(event)</td>\n<td><strong>event</strong>: eventEmitter</td>\n<td>undefined</td>\n<td>expects to get <code>event</code> with <code>{ target: { value } }</code></td>\n</tr>\n<tr>\n<td>getInputSize()</td>\n<td>-</td>\n<td>number</td>\n<td>input character count</td>\n</tr>\n<tr>\n<td>toggleSelectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>clearAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>selectAll()</td>\n<td>-</td>\n<td>undefined</td>\n<td>will select all values except disabled</td>\n</tr>\n<tr>\n<td>isSelected(item)</td>\n<td><strong>item</strong>: object</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>searchResults()</td>\n<td>-</td>\n<td>array</td>\n<td>returns array of items matching <code>/item.label/i</code> regex, if <code>searchBy</code> prop is used - matches against it's value</td>\n</tr>\n<tr>\n<td>selectRef()</td>\n<td>-</td>\n<td>DOM node</td>\n<td>returns DOM element of &#x3C;Select/></td>\n</tr>\n<tr>\n<td>getSelectBounds()</td>\n<td>-</td>\n<td>object</td>\n<td>returns <code>getBoundingClientRect()</code> of &#x3C;Select/></td>\n</tr>\n<tr>\n<td>areAllSelected()</td>\n<td>-</td>\n<td>boolean</td>\n<td>returns true/false if all values (except disabled) selected</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/methods","title":"methods"}},"propsPage":null,"statePage":{"html":"<p>Access to current state of &#x3C;Select/> component</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Return</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dropdown</td>\n<td>boolean</td>\n<td>check if dropdown is open</td>\n</tr>\n<tr>\n<td>values</td>\n<td>array</td>\n<td>selected value(s)</td>\n</tr>\n<tr>\n<td>search</td>\n<td>string</td>\n<td>current search string</td>\n</tr>\n<tr>\n<td>selectBounds</td>\n<td>object</td>\n<td>current <code>getBoundingClientRect()</code> of &#x3C;Select/></td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"November 07, 2017","path":"/state","title":"State"}}},"pageContext":{"all":{"path":"/methods","demo":null,"innerState":null,"innerProps":null,"innerMethods":null}}}