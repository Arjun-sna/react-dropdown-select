{"version":3,"sources":["webpack:///./src/examples/Basic.js","webpack:///./src/examples/Multi.js","webpack:///./src/examples/OpenOnTop.js","webpack:///./src/examples/Styled.js","webpack:///./src/examples/ItemRenderer.js","webpack:///./src/examples/CustomContentAndDropdown.js","webpack:///./src/pages/examples.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Basic","_ref","options","title","react_default","a","createElement","Fragment","href","src","values","onChange","value","console","log","propTypes","Multi","multi","OpenOnTop","openOnTop","Styled","StyledSelect","color","dropdownGap","styled","Select","_templateObject","ItemRenderer","itemRenderer","item","itemIndex","props","state","methods","StyledItem","disabled","aria-disabled","label","onClick","addItem","type","checked","isSelected","div","ItemRenderer_templateObject","CustomContentAndDropdown","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","map","user","username","email","customContentRenderer","style","cursor","customDropdownRenderer","regexp","RegExp","search","SearchAndToggle","Buttons","areAllSelected","Button","className","clearAll","selectAll","setSearch","placeholder","Items","filter","test","searchBy","labelField","option","keepSelectedInList","Item","key","valueField","indexOf","ItemLabel","inheritsLoose_default","prototype","render","_this2","CustomContentAndDropdown_StyledSelect","contentRenderer","dropdownRenderer","React","Component","CustomContentAndDropdown_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","button","_templateObject7","demoOptions","Object","assign","name","Examples","header","page","Wrapper","examples_Basic","examples_Multi","examples_OpenOnTop","examples_Styled","examples_ItemRenderer","examples_CustomContentAndDropdown","footer","examples_templateObject","dP","__webpack_require__","f","FProto","Function","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-examples-js-59691b9e6d4070dd8387.js","sourcesContent":["import React from 'react';\nimport Select from '../../../src';\n\nconst Basic = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Basic.js\">Source</a></h2>\n    <Select\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nBasic.propTypes = {};\n\nexport default Basic;\n","import React from 'react';\nimport Select from '../../../src';\n\nconst Multi = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Multi.js\">Source</a></h2>\n    <Select\n      multi\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nMulti.propTypes = {};\n\nexport default Multi;\n","import React from 'react';\nimport Select from '../../../src';\n\nconst OpenOnTop = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/OpenOnTop.js\">Source</a></h2>\n    <Select\n      multi\n      openOnTop\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nOpenOnTop.propTypes = {};\n\nexport default OpenOnTop;\n","import React from 'react';\nimport Select from '../../../src';\nimport styled from '@emotion/styled';\n\nconst Styled = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Styled.js\">Source</a></h2>\n    <StyledSelect\n      multi\n      options={options}\n      values={[options[0]]}\n      color=\"#333\"\n      dropdownGap={0}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nStyled.propTypes = {};\n\nconst StyledSelect = styled(Select)`\n  background: #333;\n  border: #333 !important;\n  color: #fff;\n  \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #fff;\n  }\n  \n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  \n  .react-dropdown-select-item {\n    color: #333;\n  }\n  \n  .react-dropdown-select-input {\n    color: #fff;\n  }\n  \n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: none;\n    width: 500px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    border-radius: 2px;\n    max-height: 300px;\n    overflow: auto;\n    z-index: 9;\n    background: #333;\n    box-shadow: none;\n    color: #fff !important;\n  }\n  \n  .react-dropdown-select-item {\n    color: #fff;\n    border-bottom: 1px solid #333;\n  }\n  \n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    //background: #111;\n    border-bottom: 1px solid #333;\n  }\n  \n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #777;\n    color: #ccc;\n  }\n`;\n\nexport default Styled;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from '../../../src';\n\nconst ItemRenderer = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{title} | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/ItemRenderer.js\">Source</a></h2>\n    <Select\n      multi\n      options={options}\n      values={[]}\n      itemRenderer={(item, itemIndex, props, state, methods) => (\n        <StyledItem>\n          {item.disabled ? <div aria-disabled>{item.label}</div> : (\n            <div onClick={() => methods.addItem(item)}>\n              <input type=\"checkbox\" checked={methods.isSelected(item)} /> {item.label}\n            </div>\n          )}\n        </StyledItem>\n      )}\n      onChange={(value) =>\n        console.log(`%c > onChange ${title} `, 'background: #555; color: tomato', value)\n      }\n    />\n  </React.Fragment>\n);\n\nItemRenderer.propTypes = {};\n\nconst StyledItem = styled.div`\n  padding: 10px;\n  color: #555;\n  border-radius: 3px;\n  margin: 3px;\n  cursor: pointer;\n  > div {\n    display: flex;\n    align-items: center;\n  }\n\n  input {\n    margin-right: 10px;\n  }\n\n  :hover {\n    background: #f2f2f2;\n  }\n`;\n\nexport default ItemRenderer;\n","import React from 'react';\nimport Select from '../../../src';\n\nimport styled from 'styled-components';\n\nexport class CustomContentAndDropdown extends React.Component {\n  options = () =>\n    options.map((user) => ({\n      label: user.username,\n      value: user.email\n    }));\n\n  customContentRenderer = (props, state) => (\n    <div style={{ cursor: 'pointer' }}>\n      {state.values.length} of {props.options.length} selected\n    </div>\n  );\n\n  customDropdownRenderer = (props, state, methods) => {\n    const regexp = new RegExp(state.search, 'i');\n\n    return (\n      <div>\n        <SearchAndToggle color={props.color}>\n          <Buttons>\n            <div>Search and select:</div>\n            {methods.areAllSelected() ? (\n              <Button className=\"clear\" onClick={methods.clearAll}>\n                Clear all\n              </Button>\n            ) : (\n              <Button onClick={methods.selectAll}>Select all</Button>\n            )}\n          </Buttons>\n          <input\n            type=\"text\"\n            value={state.search}\n            onChange={methods.setSearch}\n            placeholder=\"Type anything\"\n          />\n        </SearchAndToggle>\n        <Items>\n          {props.options\n            .filter((item) => regexp.test(item[props.searchBy] || item[props.labelField]))\n            .map((option) => {\n              if (!props.keepSelectedInList && methods.isSelected(option)) {\n                return null;\n              }\n\n              return (\n                <Item\n                  disabled={option.disabled}\n                  key={option[props.valueField]}\n                  onClick={option.disabled ? null : () => methods.addItem(option)}>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => methods.addItem(option)}\n                    checked={state.values.indexOf(option) !== -1}\n                  />\n                  <ItemLabel>{option[props.labelField]}</ItemLabel>\n                </Item>\n              );\n            })}\n        </Items>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>{this.props.title} | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/CustomContentAndDropdown.js\">Source</a></h2>\n\n        <StyledSelect\n          placeholder=\"Select\"\n          multi\n          contentRenderer={this.customContentRenderer}\n          dropdownRenderer={this.customDropdownRenderer}\n          onChange={(value) =>\n            console.log(\n              `%c > onChange ${this.props.title} `,\n              'background: #555; color: tomato',\n              value\n            )\n          }\n          options={this.props.options}\n          values={[]}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledSelect = styled(Select)`\n  .react-dropdown-select-dropdown {\n    overflow: initial;\n  }\n`;\n\nconst SearchAndToggle = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin: 10px 10px 0;\n    line-height: 30px;\n    padding: 0px 20px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    :focus {\n      outline: none;\n      border: 1px solid deepskyblue;\n    }\n  }\n`;\n\nconst Items = styled.div`\n  overflow: auto;\n  min-height: 10px;\n  max-height: 200px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  margin: 10px;\n  align-items: baseline;\n  ${({disabled}) => disabled && 'text-decoration: line-through;'}\n`;\n\nconst ItemLabel = styled.div`\n  margin: 5px 10px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & div {\n    margin: 10px 0 0 10px;\n    font-weight: 600;\n  }\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid #555;\n  color: #555;\n  border-radius: 3px;\n  margin: 10px 10px 0;\n  padding: 3px 5px;\n  font-size: 10px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n\n  &.clear {\n    color: tomato;\n    border: 1px solid tomato;\n  }\n\n  :hover {\n    border: 1px solid deepskyblue;\n    color: deepskyblue;\n  }\n`;\n\nCustomContentAndDropdown.propTypes = {};\n\nexport default CustomContentAndDropdown;\n","import React from 'react';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport styled from '@emotion/styled';\n\nimport 'normalize.css';\nimport '../demo-styles.css';\n\nimport '../styles.css';\n\nimport { options } from '../options';\n\nimport Basic from '../examples/Basic';\nimport Multi from '../examples/Multi';\nimport OpenOnTop from '../examples/OpenOnTop';\nimport Styled from '../examples/Styled';\nimport ItemRenderer from '../examples/ItemRenderer';\nimport CustomContentAndDropdown from '../examples/CustomContentAndDropdown';\n\nconst demoOptions = options.map((option) => ({\n  ...option,\n  label: option.name,\n  value: option.email,\n}));\n\nconst Examples = () => (\n  <div className=\"container px2 sm-px3\">\n    <Header page=\"examples\" title=\"Examples\" />\n\n    <Wrapper>\n      <Basic options={demoOptions} title=\"Basic\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <Multi options={demoOptions} title=\"Multi\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <OpenOnTop options={demoOptions} title=\"Open on top\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <Styled options={demoOptions} title=\"Styled\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <ItemRenderer options={demoOptions} title=\"Item custom renderer\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <CustomContentAndDropdown options={demoOptions} title=\"Custom Content And Dropdown renderers\"/>\n    </Wrapper>\n\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n\n    <Footer/>\n  </div>\n);\n\nExamples.propTypes = {};\n\nconst Wrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n  \n  h2 {\n    font-weight: 300;\n  }\n`;\n\nexport default Examples;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}