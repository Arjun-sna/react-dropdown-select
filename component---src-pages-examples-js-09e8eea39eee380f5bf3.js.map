{"version":3,"sources":["webpack:///./src/examples/Basic.js","webpack:///./src/examples/Multi.js","webpack:///./src/examples/OpenOnTop.js","webpack:///./src/examples/Styled.js","webpack:///./src/examples/ItemRenderer.js","webpack:///./src/examples/CustomContentAndDropdown.js","webpack:///./src/pages/examples.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Basic","_ref","options","title","Object","core_browser_esm","react_default","a","Fragment","href","src","values","onChange","value","console","log","propTypes","Multi","multi","OpenOnTop","openOnTop","Styled","StyledSelect","color","dropdownGap","styled_base_browser_esm","Select","target","name","styles","ItemRenderer","itemRenderer","item","itemIndex","props","state","methods","StyledItem","disabled","aria-disabled","label","onClick","addItem","type","checked","isSelected","CustomContentAndDropdown","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","map","user","username","email","customContentRenderer","style","cursor","customDropdownRenderer","regexp","RegExp","search","SearchAndToggle","Buttons","areAllSelected","Button","className","clearAll","selectAll","setSearch","placeholder","Items","filter","test","searchBy","labelField","option","keepSelectedInList","Item","key","valueField","indexOf","ItemLabel","inheritsLoose_default","prototype","render","_this2","CustomContentAndDropdown_StyledSelect","contentRenderer","dropdownRenderer","React","Component","demoOptions","assign","Examples","header","page","Wrapper","examples_Basic","examples_Multi","examples_OpenOnTop","examples_Styled","examples_ItemRenderer","examples_CustomContentAndDropdown","footer","dP","__webpack_require__","f","FProto","Function","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-examples-js-09e8eea39eee380f5bf3.js","sourcesContent":["import React from 'react';\nimport Select from '../../../src';\n\nconst Basic = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Basic.js\">Source</a></h2>\n    <Select\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nBasic.propTypes = {};\n\nexport default Basic;\n","import React from 'react';\nimport Select from '../../../src';\n\nconst Multi = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Multi.js\">Source</a></h2>\n    <Select\n      multi\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nMulti.propTypes = {};\n\nexport default Multi;\n","import React from 'react';\nimport Select from '../../../src';\n\nconst OpenOnTop = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/OpenOnTop.js\">Source</a></h2>\n    <Select\n      multi\n      openOnTop\n      options={options}\n      values={[]}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nOpenOnTop.propTypes = {};\n\nexport default OpenOnTop;\n","import React from 'react';\nimport Select from '../../../src';\nimport styled from '@emotion/styled';\n\nconst Styled = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{ title } | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/Styled.js\">Source</a></h2>\n    <StyledSelect\n      multi\n      options={options}\n      values={[options[0]]}\n      color=\"#333\"\n      dropdownGap={0}\n      onChange={(value) => console.log(`%c > onChange ${ title } `, 'background: #555; color: tomato', value)}\n    />\n  </React.Fragment>\n);\n\nStyled.propTypes = {};\n\nconst StyledSelect = styled(Select)`\n  background: #333;\n  border: #333 !important;\n  color: #fff;\n  \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #fff;\n  }\n  \n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  \n  .react-dropdown-select-item {\n    color: #333;\n  }\n  \n  .react-dropdown-select-input {\n    color: #fff;\n  }\n  \n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: none;\n    width: 500px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    border-radius: 2px;\n    max-height: 300px;\n    overflow: auto;\n    z-index: 9;\n    background: #333;\n    box-shadow: none;\n    color: #fff !important;\n  }\n  \n  .react-dropdown-select-item {\n    color: #fff;\n    border-bottom: 1px solid #333;\n  }\n  \n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    //background: #111;\n    border-bottom: 1px solid #333;\n  }\n  \n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #777;\n    color: #ccc;\n  }\n`;\n\nexport default Styled;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from '../../../src';\n\nconst ItemRenderer = ({ options, title }) => (\n  <React.Fragment>\n    <h2>{title} | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/ItemRenderer.js\">Source</a></h2>\n    <Select\n      multi\n      options={options}\n      values={[]}\n      itemRenderer={(item, itemIndex, props, state, methods) => (\n        <StyledItem>\n          {item.disabled ? <div aria-disabled>{item.label}</div> : (\n            <div onClick={() => methods.addItem(item)}>\n              <input type=\"checkbox\" checked={methods.isSelected(item)} /> {item.label}\n            </div>\n          )}\n        </StyledItem>\n      )}\n      onChange={(value) =>\n        console.log(`%c > onChange ${title} `, 'background: #555; color: tomato', value)\n      }\n    />\n  </React.Fragment>\n);\n\nItemRenderer.propTypes = {};\n\nconst StyledItem = styled.div`\n  padding: 10px;\n  color: #555;\n  border-radius: 3px;\n  margin: 3px;\n  cursor: pointer;\n  > div {\n    display: flex;\n    align-items: center;\n  }\n\n  input {\n    margin-right: 10px;\n  }\n\n  :hover {\n    background: #f2f2f2;\n  }\n`;\n\nexport default ItemRenderer;\n","import React from 'react';\nimport Select from '../../../src';\n\nimport styled from '@emotion/styled';\n\nexport class CustomContentAndDropdown extends React.Component {\n  options = () =>\n    options.map((user) => ({\n      label: user.username,\n      value: user.email\n    }));\n\n  customContentRenderer = (props, state) => (\n    <div style={{ cursor: 'pointer' }}>\n      {state.values.length} of {props.options.length} selected\n    </div>\n  );\n\n  customDropdownRenderer = (props, state, methods) => {\n    const regexp = new RegExp(state.search, 'i');\n\n    return (\n      <div>\n        <SearchAndToggle color={props.color}>\n          <Buttons>\n            <div>Search and select:</div>\n            {methods.areAllSelected() ? (\n              <Button className=\"clear\" onClick={methods.clearAll}>\n                Clear all\n              </Button>\n            ) : (\n              <Button onClick={methods.selectAll}>Select all</Button>\n            )}\n          </Buttons>\n          <input\n            type=\"text\"\n            value={state.search}\n            onChange={methods.setSearch}\n            placeholder=\"Type anything\"\n          />\n        </SearchAndToggle>\n        <Items>\n          {props.options\n            .filter((item) => regexp.test(item[props.searchBy] || item[props.labelField]))\n            .map((option) => {\n              if (!props.keepSelectedInList && methods.isSelected(option)) {\n                return null;\n              }\n\n              return (\n                <Item\n                  disabled={option.disabled}\n                  key={option[props.valueField]}\n                  onClick={option.disabled ? null : () => methods.addItem(option)}>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => methods.addItem(option)}\n                    checked={state.values.indexOf(option) !== -1}\n                  />\n                  <ItemLabel>{option[props.labelField]}</ItemLabel>\n                </Item>\n              );\n            })}\n        </Items>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>{this.props.title} | <a href=\"https://github.com/sanusart/react-dropdown-select/tree/master/docs/src/examples/CustomContentAndDropdown.js\">Source</a></h2>\n\n        <StyledSelect\n          placeholder=\"Select\"\n          multi\n          contentRenderer={this.customContentRenderer}\n          dropdownRenderer={this.customDropdownRenderer}\n          onChange={(value) =>\n            console.log(\n              `%c > onChange ${this.props.title} `,\n              'background: #555; color: tomato',\n              value\n            )\n          }\n          options={this.props.options}\n          values={[]}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledSelect = styled(Select)`\n  .react-dropdown-select-dropdown {\n    overflow: initial;\n  }\n`;\n\nconst SearchAndToggle = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin: 10px 10px 0;\n    line-height: 30px;\n    padding: 0px 20px;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    :focus {\n      outline: none;\n      border: 1px solid deepskyblue;\n    }\n  }\n`;\n\nconst Items = styled.div`\n  overflow: auto;\n  min-height: 10px;\n  max-height: 200px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  margin: 10px;\n  align-items: baseline;\n  ${({disabled}) => disabled && 'text-decoration: line-through;'}\n`;\n\nconst ItemLabel = styled.div`\n  margin: 5px 10px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & div {\n    margin: 10px 0 0 10px;\n    font-weight: 600;\n  }\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid #555;\n  color: #555;\n  border-radius: 3px;\n  margin: 10px 10px 0;\n  padding: 3px 5px;\n  font-size: 10px;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n\n  &.clear {\n    color: tomato;\n    border: 1px solid tomato;\n  }\n\n  :hover {\n    border: 1px solid deepskyblue;\n    color: deepskyblue;\n  }\n`;\n\nCustomContentAndDropdown.propTypes = {};\n\nexport default CustomContentAndDropdown;\n","import React from 'react';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport styled from '@emotion/styled';\n\nimport 'normalize.css';\nimport '../demo-styles.css';\n\nimport '../styles.css';\n\nimport { options } from '../options';\n\nimport Basic from '../examples/Basic';\nimport Multi from '../examples/Multi';\nimport OpenOnTop from '../examples/OpenOnTop';\nimport Styled from '../examples/Styled';\nimport ItemRenderer from '../examples/ItemRenderer';\nimport CustomContentAndDropdown from '../examples/CustomContentAndDropdown';\n\nconst demoOptions = options.map((option) => ({\n  ...option,\n  label: option.name,\n  value: option.email,\n}));\n\nconst Examples = () => (\n  <div className=\"container px2 sm-px3\">\n    <Header page=\"examples\" title=\"Examples\" />\n\n    <Wrapper>\n      <Basic options={demoOptions} title=\"Basic\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <Multi options={demoOptions} title=\"Multi\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <OpenOnTop options={demoOptions} title=\"Open on top\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <Styled options={demoOptions} title=\"Styled\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <ItemRenderer options={demoOptions} title=\"Item custom renderer\"/>\n    </Wrapper>\n\n    <Wrapper>\n      <CustomContentAndDropdown options={demoOptions} title=\"Custom Content And Dropdown renderers\"/>\n    </Wrapper>\n\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n\n    <Footer/>\n  </div>\n);\n\nExamples.propTypes = {};\n\nconst Wrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n  \n  h2 {\n    font-weight: 300;\n  }\n`;\n\nexport default Examples;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}